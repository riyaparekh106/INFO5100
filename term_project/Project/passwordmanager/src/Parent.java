/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

/**
 *
 * @author riyaparekh
 */
public class Parent extends javax.swing.JFrame {


    private Vector vaultComboBoxItems;
    private Vector credentialComboBoxItems;
    private Vector noteComboBoxItems;
    private String globalUserame;
    private String globalVaultName;
    private List<String> allVaultsForUser = new ArrayList<>();
    private ViewOperations viewOperations;
    public Parent() {
        viewOperations = new ViewOperations();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        MainFrame = new javax.swing.JPanel();
        loginScreen = new javax.swing.JPanel();
        passwordLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        registerButton = new javax.swing.JButton();
        loginButton1 = new javax.swing.JButton();
        listOfVaultScreen = new javax.swing.JPanel();
        listOfVaults = new javax.swing.JComboBox<>();
        newVaultButton = new javax.swing.JButton();
        backButtonOnListOfVaultsScreen = new javax.swing.JButton();
        selectVaultButton = new javax.swing.JButton();
        newVaultScreen = new javax.swing.JPanel();
        vaultNameTextField = new javax.swing.JTextField();
        vaultNameLabel = new javax.swing.JLabel();
        createVaultButton = new javax.swing.JButton();
        existingVaultScreen = new javax.swing.JPanel();
        viewCredentialsButton = new javax.swing.JButton();
        viewNotesButton = new javax.swing.JButton();
        createCredentialButton = new javax.swing.JButton();
        createNoteButton = new javax.swing.JButton();
        backButtonOnExistingVaultPage = new javax.swing.JButton();
        shareVaultButton = new javax.swing.JButton();
        newCredentialScreen = new javax.swing.JPanel();
        credentialTitleTextField = new javax.swing.JTextField();
        credentialUsernameTextField = new javax.swing.JTextField();
        credentialPasswordTextField = new javax.swing.JTextField();
        generateRandomizedPasswordButton = new javax.swing.JButton();
        createCredentialButtonActual = new javax.swing.JButton();
        creadentialTitleLabel = new javax.swing.JLabel();
        credentialUsernameLabel = new javax.swing.JLabel();
        credentialPasswordLabel = new javax.swing.JLabel();
        backButtonOnNewCredentialScreen = new javax.swing.JButton();
        viewCredentialsScreen = new javax.swing.JPanel();
        viewCredentialComboBox = new javax.swing.JComboBox<>();
        viewCredentialButton = new javax.swing.JButton();
        backButtonOnViewCredentialScreen = new javax.swing.JButton();
        newNoteScreen = new javax.swing.JPanel();
        noteTitleTextField = new javax.swing.JTextField();
        noteTitleLabel = new javax.swing.JLabel();
        noteContentTextArea = new java.awt.TextArea();
        noteContentLabel = new javax.swing.JLabel();
        createNoteButtonActual = new javax.swing.JButton();
        backButtonOnNewNoteScreen = new javax.swing.JButton();
        viewNotesScreen = new javax.swing.JPanel();
        viewNotesComboBox = new javax.swing.JComboBox<>();
        viewNoteButton = new javax.swing.JButton();
        backButtonOnViewNotesScreen = new javax.swing.JButton();
        shareVaultScreen = new javax.swing.JPanel();
        backButtonOnShareVaultScreen = new javax.swing.JButton();
        userEmailIdTextField = new javax.swing.JTextField();
        shareVaultUsernameLabel = new javax.swing.JLabel();
        shareVaultButtonOnShareVaultScreen = new javax.swing.JButton();
        existingVaultLabel = new javax.swing.JLabel();
        existingCredentialScreen = new javax.swing.JPanel();
        labelUsernameOnCredentialScreen = new javax.swing.JLabel();
        labelPasswordOnCredentialScreen = new javax.swing.JLabel();
        vaultNameOnCredentialScreen = new javax.swing.JLabel();
        backButtonOnExistingCredentialScreen = new javax.swing.JButton();
        displayUserNameOnCredentialScreen = new javax.swing.JLabel();
        displayPasswordOnCredentialScreen = new javax.swing.JLabel();
        existingNoteScreen = new javax.swing.JPanel();
        displayNoteTitleOnNoteScreen = new javax.swing.JLabel();
        displayNoteContentOnNoteScreen = new java.awt.TextArea();
        backButtonOnExistingNoteScreen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        MainFrame.setLayout(new java.awt.CardLayout());

        passwordLabel.setText("Password");

        userNameLabel.setText("Username");

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    registerButtonActionPerformed();
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        loginButton1.setText("Login");
        loginButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String loginPassword = String.valueOf(passwordTextField.getPassword());
                String loginUserName = usernameTextField.getText();
                try {
                    boolean loginSuccessful = viewOperations.loginButtonActionPerformed(loginUserName, loginPassword);
                    if (loginSuccessful) {
                        globalUserame = loginUserName;
                        List<String> listOfVaultsForUser = viewOperations.viewAllVaultsForUser(globalUserame);
                        for(String vault: listOfVaultsForUser) {
                            vaultComboBoxItems.add(vault);
                        }
                        viewOperations.reDisplayScreen(MainFrame,listOfVaultScreen);
                    }
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout loginScreenLayout = new javax.swing.GroupLayout(loginScreen);
        loginScreen.setLayout(loginScreenLayout);
        loginScreenLayout.setHorizontalGroup(
                loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginScreenLayout.createSequentialGroup()
                                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(loginScreenLayout.createSequentialGroup()
                                                .addGap(74, 74, 74)
                                                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(58, 58, 58)
                                                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(usernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                                        .addComponent(passwordTextField)))
                                        .addGroup(loginScreenLayout.createSequentialGroup()
                                                .addGap(190, 190, 190)
                                                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(301, Short.MAX_VALUE))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(loginScreenLayout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(548, Short.MAX_VALUE)))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(loginScreenLayout.createSequentialGroup()
                                        .addGap(188, 188, 188)
                                        .addComponent(loginButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(411, Short.MAX_VALUE)))
        );
        loginScreenLayout.setVerticalGroup(
                loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginScreenLayout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(loginScreenLayout.createSequentialGroup()
                                        .addGap(111, 111, 111)
                                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(284, Short.MAX_VALUE)))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginScreenLayout.createSequentialGroup()
                                        .addContainerGap(299, Short.MAX_VALUE)
                                        .addComponent(loginButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(95, 95, 95)))
        );

        MainFrame.add(loginScreen, "card2");
        vaultComboBoxItems = new Vector();
        vaultComboBoxItems.add("VaultName");

        listOfVaults.setModel(new javax.swing.DefaultComboBoxModel<>(vaultComboBoxItems));
        listOfVaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOfVaultsActionPerformed(evt);
            }
        });

        newVaultButton.setText("Create Vault");
        newVaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newVaultButtonActionPerformed(evt);
            }
        });

        backButtonOnListOfVaultsScreen.setText("Back");
        backButtonOnListOfVaultsScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnListOfVaultsScreenActionPerformed(evt);
            }
        });

        selectVaultButton.setText("Select");
        selectVaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectVaultButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listOfVaultScreenLayout = new javax.swing.GroupLayout(listOfVaultScreen);
        listOfVaultScreen.setLayout(listOfVaultScreenLayout);
        listOfVaultScreenLayout.setHorizontalGroup(
                listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(listOfVaultScreenLayout.createSequentialGroup()
                                .addGroup(listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(listOfVaultScreenLayout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addComponent(backButtonOnListOfVaultsScreen))
                                        .addGroup(listOfVaultScreenLayout.createSequentialGroup()
                                                .addGap(185, 185, 185)
                                                .addGroup(listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(listOfVaults, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(newVaultButton, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                                .addContainerGap(392, Short.MAX_VALUE))
                        .addGroup(listOfVaultScreenLayout.createSequentialGroup()
                                .addGap(216, 216, 216)
                                .addComponent(selectVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(433, Short.MAX_VALUE))
        );
        listOfVaultScreenLayout.setVerticalGroup(
                listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listOfVaultScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(backButtonOnListOfVaultsScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                                .addComponent(newVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(listOfVaults, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(selectVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105))
        );

        MainFrame.add(listOfVaultScreen, "card3");

        vaultNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaultNameTextFieldActionPerformed(evt);
            }
        });

        vaultNameLabel.setText("Vault Name");

        createVaultButton.setText("Create Vault");
        createVaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    createVaultButtonActionPerformed(evt);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null,"Vault with the same name already exists");
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout newVaultScreenLayout = new javax.swing.GroupLayout(newVaultScreen);
        newVaultScreen.setLayout(newVaultScreenLayout);
        newVaultScreenLayout.setHorizontalGroup(
                newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(vaultNameLabel)
                                .addGroup(newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                                .addGap(56, 56, 56)
                                                .addComponent(createVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(vaultNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(376, Short.MAX_VALUE))
        );
        newVaultScreenLayout.setVerticalGroup(
                newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addGroup(newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(vaultNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(vaultNameLabel))
                                .addGap(68, 68, 68)
                                .addComponent(createVaultButton)
                                .addContainerGap(144, Short.MAX_VALUE))
        );

        MainFrame.add(newVaultScreen, "card9");

        viewCredentialsButton.setText("View Credentials");
        viewCredentialsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCredentialsButtonActionPerformed(evt);

            }
        });

        viewNotesButton.setText("View Notes");
        viewNotesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewNotesButtonActionPerformed(evt);
            }
        });

        createCredentialButton.setText("Create Credential");
        createCredentialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOperations.reDisplayScreen(MainFrame,newCredentialScreen);
            }
        });

        createNoteButton.setText("Create Note");
        createNoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNoteButtonActionPerformed(evt);
                viewOperations.reDisplayScreen(MainFrame, newNoteScreen);
            }
        });

        backButtonOnExistingVaultPage.setText("Back");
        backButtonOnExistingVaultPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credentialComboBoxItems.removeAllElements();
                noteComboBoxItems.removeAllElements();
                viewOperations.reDisplayScreen(MainFrame,listOfVaultScreen);
            }
        });

        shareVaultButton.setText("Share Vault");
        shareVaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shareVaultButtonActionPerformed(evt);
                viewOperations.reDisplayScreen(MainFrame,existingVaultScreen);
            }
        });

        javax.swing.GroupLayout existingVaultScreenLayout = new javax.swing.GroupLayout(existingVaultScreen);
        existingVaultScreen.setLayout(existingVaultScreenLayout);
        existingVaultScreenLayout.setHorizontalGroup(
                existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingVaultScreenLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(shareVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                        .addGroup(existingVaultScreenLayout.createSequentialGroup()
                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(existingVaultScreenLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addComponent(backButtonOnExistingVaultPage, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(existingVaultScreenLayout.createSequentialGroup()
                                                .addGap(90, 90, 90)
                                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(createCredentialButton, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                                        .addComponent(viewCredentialsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(48, 48, 48)
                                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(createNoteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                                        .addComponent(viewNotesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap(278, Short.MAX_VALUE))
        );
        existingVaultScreenLayout.setVerticalGroup(
                existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingVaultScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(backButtonOnExistingVaultPage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(createNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(createCredentialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(viewCredentialsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(viewNotesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)
                                .addComponent(shareVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
        );

        MainFrame.add(existingVaultScreen, "card4");

        generateRandomizedPasswordButton.setText("Generate Randomized Password");
        generateRandomizedPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateRandomizedPasswordButtonActionPerformed(evt);
            }
        });

        createCredentialButtonActual.setText("Create Credential");
        createCredentialButtonActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCredentialButtonActualActionPerformed(evt);
            }
        });

        creadentialTitleLabel.setText("Title");

        credentialUsernameLabel.setText("Username");

        credentialPasswordLabel.setText("Password");

        backButtonOnNewCredentialScreen.setText("Back");
        backButtonOnNewCredentialScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOperations.reDisplayScreen(MainFrame,existingVaultScreen);
            }
        });

        javax.swing.GroupLayout newCredentialScreenLayout = new javax.swing.GroupLayout(newCredentialScreen);
        newCredentialScreen.setLayout(newCredentialScreenLayout);
        newCredentialScreenLayout.setHorizontalGroup(
                newCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newCredentialScreenLayout.createSequentialGroup()
                                .addGroup(newCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(newCredentialScreenLayout.createSequentialGroup()
                                                .addGap(126, 126, 126)
                                                .addGroup(newCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(credentialPasswordLabel)
                                                        .addComponent(credentialUsernameLabel)
                                                        .addComponent(creadentialTitleLabel)
                                                        .addGroup(newCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(credentialTitleTextField)
                                                                .addComponent(credentialUsernameTextField)
                                                                .addComponent(credentialPasswordTextField)
                                                                .addComponent(generateRandomizedPasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                                                .addComponent(createCredentialButtonActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addGroup(newCredentialScreenLayout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(backButtonOnNewCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(387, Short.MAX_VALUE))
        );
        newCredentialScreenLayout.setVerticalGroup(
                newCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newCredentialScreenLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(backButtonOnNewCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(creadentialTitleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(credentialTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(credentialUsernameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(credentialUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(credentialPasswordLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(credentialPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(generateRandomizedPasswordButton)
                                .addGap(18, 18, 18)
                                .addComponent(createCredentialButtonActual)
                                .addContainerGap(22, Short.MAX_VALUE))
        );

        MainFrame.add(newCredentialScreen, "card12");

        credentialComboBoxItems = new Vector();
        credentialComboBoxItems.add("Credential");

        viewCredentialComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(credentialComboBoxItems));
        viewCredentialComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCredentialComboBoxActionPerformed(evt);
            }
        });

        viewCredentialButton.setText("View Credential");
        viewCredentialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCredentialButtonActionPerformed(evt);
            }
        });

        backButtonOnViewCredentialScreen.setText("Back");
        backButtonOnViewCredentialScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnViewCredentialScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewCredentialsScreenLayout = new javax.swing.GroupLayout(viewCredentialsScreen);
        viewCredentialsScreen.setLayout(viewCredentialsScreenLayout);
        viewCredentialsScreenLayout.setHorizontalGroup(
                viewCredentialsScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewCredentialsScreenLayout.createSequentialGroup()
                                .addGroup(viewCredentialsScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(viewCredentialsScreenLayout.createSequentialGroup()
                                                .addGap(175, 175, 175)
                                                .addComponent(viewCredentialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(viewCredentialsScreenLayout.createSequentialGroup()
                                                .addGap(219, 219, 219)
                                                .addComponent(viewCredentialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(viewCredentialsScreenLayout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(backButtonOnViewCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(387, Short.MAX_VALUE))
        );
        viewCredentialsScreenLayout.setVerticalGroup(
                viewCredentialsScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewCredentialsScreenLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(backButtonOnViewCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)
                                .addComponent(viewCredentialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(viewCredentialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(103, Short.MAX_VALUE))
        );

        MainFrame.add(viewCredentialsScreen, "card7");

        noteTitleLabel.setText("Note Title");

        noteContentLabel.setText("Note Content");

        createNoteButtonActual.setText("Create Note");
        createNoteButtonActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNoteButtonActualActionPerformed(evt);
            }
        });

        backButtonOnNewNoteScreen.setText("Back");
        backButtonOnNewNoteScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnNewNoteScreenActionPerformed(evt);
                viewOperations.reDisplayScreen(MainFrame, existingVaultScreen);
            }
        });

        javax.swing.GroupLayout newNoteScreenLayout = new javax.swing.GroupLayout(newNoteScreen);
        newNoteScreen.setLayout(newNoteScreenLayout);
        newNoteScreenLayout.setHorizontalGroup(
                newNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newNoteScreenLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(createNoteButtonActual, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(205, 205, 205))
                        .addGroup(newNoteScreenLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(newNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(backButtonOnNewNoteScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(newNoteScreenLayout.createSequentialGroup()
                                                .addGroup(newNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(noteTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(noteContentLabel))
                                                .addGap(73, 73, 73)
                                                .addGroup(newNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(noteTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(noteContentTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(318, Short.MAX_VALUE))
        );
        newNoteScreenLayout.setVerticalGroup(
                newNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newNoteScreenLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(backButtonOnNewNoteScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(newNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(noteTitleLabel)
                                        .addComponent(noteTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(newNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(newNoteScreenLayout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(noteContentTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(newNoteScreenLayout.createSequentialGroup()
                                                .addGap(46, 46, 46)
                                                .addComponent(noteContentLabel)))
                                .addGap(21, 21, 21)
                                .addComponent(createNoteButtonActual, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(18, Short.MAX_VALUE))
        );

        MainFrame.add(newNoteScreen, "card10");

        noteComboBoxItems = new Vector();
        noteComboBoxItems.add("Note");

        viewNotesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(noteComboBoxItems));

        viewNoteButton.setText("View Note");
        viewNoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewNoteButtonActionPerformed(evt);
            }
        });

        backButtonOnViewNotesScreen.setText("Back");
        backButtonOnViewNotesScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnViewNotesScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewNotesScreenLayout = new javax.swing.GroupLayout(viewNotesScreen);
        viewNotesScreen.setLayout(viewNotesScreenLayout);
        viewNotesScreenLayout.setHorizontalGroup(
                viewNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewNotesScreenLayout.createSequentialGroup()
                                .addContainerGap(396, Short.MAX_VALUE)
                                .addGroup(viewNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewNotesScreenLayout.createSequentialGroup()
                                                .addComponent(viewNotesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(159, 159, 159))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewNotesScreenLayout.createSequentialGroup()
                                                .addComponent(viewNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(222, 222, 222))))
                        .addGroup(viewNotesScreenLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(backButtonOnViewNotesScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        viewNotesScreenLayout.setVerticalGroup(
                viewNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewNotesScreenLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(backButtonOnViewNotesScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(126, 126, 126)
                                .addComponent(viewNotesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(viewNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(111, Short.MAX_VALUE))
        );

        MainFrame.add(viewNotesScreen, "card6");

        backButtonOnShareVaultScreen.setText("Back");
        backButtonOnShareVaultScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnShareVaultScreenActionPerformed(evt);
            }
        });

        shareVaultUsernameLabel.setText("Username");

        shareVaultButtonOnShareVaultScreen.setText("Share");
        shareVaultButtonOnShareVaultScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shareVaultButtonOnShareVaultScreenActionPerformed(evt);
            }
        });

        existingVaultLabel.setText("VaultName");

        javax.swing.GroupLayout shareVaultScreenLayout = new javax.swing.GroupLayout(shareVaultScreen);
        shareVaultScreen.setLayout(shareVaultScreenLayout);
        shareVaultScreenLayout.setHorizontalGroup(
                shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shareVaultScreenLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(shareVaultButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(206, 206, 206))
                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                .addGroup(shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                                .addGap(194, 194, 194)
                                                .addComponent(existingVaultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addGroup(shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                                                .addComponent(shareVaultUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(userEmailIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(backButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(341, Short.MAX_VALUE))
        );
        shareVaultScreenLayout.setVerticalGroup(
                shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(backButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(existingVaultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addGroup(shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(shareVaultUsernameLabel)
                                        .addComponent(userEmailIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                                .addComponent(shareVaultButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36))
        );

        MainFrame.add(shareVaultScreen, "card5");

        labelUsernameOnCredentialScreen.setText("Username");

        labelPasswordOnCredentialScreen.setText("Password");

        vaultNameOnCredentialScreen.setText("Vault Name");

        backButtonOnExistingCredentialScreen.setText("Back");
        backButtonOnExistingCredentialScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnExistingCredentialScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout existingCredentialScreenLayout = new javax.swing.GroupLayout(existingCredentialScreen);
        existingCredentialScreen.setLayout(existingCredentialScreenLayout);
        existingCredentialScreenLayout.setHorizontalGroup(
                existingCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(existingCredentialScreenLayout.createSequentialGroup()
                                .addGroup(existingCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(existingCredentialScreenLayout.createSequentialGroup()
                                                .addGap(40, 40, 40)
                                                .addGroup(existingCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(labelUsernameOnCredentialScreen)
                                                        .addComponent(labelPasswordOnCredentialScreen)
                                                        .addComponent(backButtonOnExistingCredentialScreen))
                                                .addGap(99, 99, 99)
                                                .addGroup(existingCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(displayUserNameOnCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(displayPasswordOnCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(existingCredentialScreenLayout.createSequentialGroup()
                                                .addGap(239, 239, 239)
                                                .addComponent(vaultNameOnCredentialScreen)))
                                .addContainerGap(379, Short.MAX_VALUE))
        );
        existingCredentialScreenLayout.setVerticalGroup(
                existingCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(existingCredentialScreenLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(backButtonOnExistingCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(vaultNameOnCredentialScreen)
                                .addGap(47, 47, 47)
                                .addGroup(existingCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelUsernameOnCredentialScreen)
                                        .addComponent(displayUserNameOnCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(existingCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelPasswordOnCredentialScreen)
                                        .addComponent(displayPasswordOnCredentialScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(159, Short.MAX_VALUE))
        );

        MainFrame.add(existingCredentialScreen, "card8");

        displayNoteTitleOnNoteScreen.setText("Note Title");

        backButtonOnExistingNoteScreen.setText("Back");
        backButtonOnExistingNoteScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnExistingNoteScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout existingNoteScreenLayout = new javax.swing.GroupLayout(existingNoteScreen);
        existingNoteScreen.setLayout(existingNoteScreenLayout);
        existingNoteScreenLayout.setHorizontalGroup(
                existingNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(existingNoteScreenLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(backButtonOnExistingNoteScreen)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(existingNoteScreenLayout.createSequentialGroup()
                                .addGroup(existingNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(existingNoteScreenLayout.createSequentialGroup()
                                                .addGap(160, 160, 160)
                                                .addComponent(displayNoteContentOnNoteScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(existingNoteScreenLayout.createSequentialGroup()
                                                .addGap(172, 172, 172)
                                                .addComponent(displayNoteTitleOnNoteScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(400, Short.MAX_VALUE))
        );
        existingNoteScreenLayout.setVerticalGroup(
                existingNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(existingNoteScreenLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(backButtonOnExistingNoteScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(displayNoteTitleOnNoteScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(displayNoteContentOnNoteScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(81, Short.MAX_VALUE))
        );

        MainFrame.add(existingNoteScreen, "card11");

        getContentPane().add(MainFrame);
        MainFrame.setBounds(0, 0, 575, 436);

        pack();
    }// </editor-fold>

    private void newVaultButtonActionPerformed(java.awt.event.ActionEvent evt) {
        viewOperations.reDisplayScreen(MainFrame,newVaultScreen);
    }

    private void createCredentialButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

    }

    private void backButtonOnShareVaultScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void viewCredentialComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void vaultNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void generateRandomizedPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String randomPassword = viewOperations.generateRandomPassword();
        credentialPasswordTextField.setText(randomPassword);
        // TODO add your handling code here:
    }

    private void createCredentialButtonActualActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String credentialTitle = credentialTitleTextField.getText();
            String credentialUsername = credentialUsernameTextField.getText();
            String credentialPassword = credentialPasswordTextField.getText();
            viewOperations.createCredential(globalUserame,globalVaultName,credentialTitle,credentialUsername,credentialPassword);
            JOptionPane.showMessageDialog(null,"Credential Created Successfully");
            credentialComboBoxItems.add(credentialTitle);
            viewOperations.reDisplayScreen(MainFrame,existingVaultScreen);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Credential with the same name already exists");
            throw new RuntimeException(e);
        }

    }

    private void createNoteActionPerformed() {
        String notesTitle = noteTitleTextField.getText();
        String noteContent = noteContentTextArea.getText();
        if(noteContent.isEmpty()) {
            viewOperations.createNoteWithTitle(globalUserame, globalVaultName,notesTitle);
        }
        else {
            viewOperations.createNoteWithContent(globalUserame, globalVaultName, notesTitle, noteContent);
        }
        noteComboBoxItems.add(notesTitle);
        JOptionPane.showMessageDialog(null,"Note Created Successfully");
        viewOperations.reDisplayScreen(MainFrame, existingVaultScreen);

    }

    private void viewCredentialsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        viewOperations.viewCredentials(globalUserame,globalVaultName);
        viewOperations.reDisplayScreen(MainFrame, viewCredentialsScreen);

    }

    private void listOfVaultsActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void createNoteButtonActualActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        createNoteActionPerformed();

    }

    private List<String> getCredentialsForUserAndVault() {
        return viewOperations.viewCredentials(globalUserame,globalVaultName);
    }

    private List<String> getNotesForUserAndVault() {
        return viewOperations.viewNotes(globalUserame,globalVaultName);
    }
    private void selectVaultButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        globalVaultName= (String) listOfVaults.getSelectedItem();
        List<String> listOfCredentialsForUserPerVault = getCredentialsForUserAndVault();
        List<String> listOfNotesForUserPerVault = getNotesForUserAndVault();
        for(String credential: listOfCredentialsForUserPerVault) {
            credentialComboBoxItems.add(credential);
        }
        for(String note:listOfNotesForUserPerVault) {
            noteComboBoxItems.add(note);
        }
        viewOperations.reDisplayScreen(MainFrame,existingVaultScreen);
    }

    private void createVaultButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        globalVaultName = vaultNameTextField.getText();
        viewOperations.createNewVault(globalUserame,globalVaultName);
        vaultComboBoxItems.add(globalVaultName);
        viewOperations.reDisplayScreen(MainFrame,existingVaultScreen);
    }

    private void backButtonOnViewCredentialScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        viewOperations.reDisplayScreen(MainFrame, existingVaultScreen);
    }

    private void backButtonOnExistingCredentialScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        viewOperations.reDisplayScreen(MainFrame,viewCredentialsScreen);
    }

    private void registerButtonActionPerformed() throws SQLException {
        try{
            String loginPassword = String.valueOf(passwordTextField.getPassword());
            String loginUserName = usernameTextField.getText();
            viewOperations.registerButtonActionPerformed(loginUserName, loginPassword);
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"User with same username already exists");
            throw new RuntimeException(e);
        }

    }

    private void loginButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void backButtonOnListOfVaultsScreenActionPerformed(java.awt.event.ActionEvent evt) {
        viewOperations.reDisplayScreen(MainFrame,loginScreen);
    }

    private void viewNotesButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        viewOperations.viewNotes(globalUserame,globalVaultName);
        viewOperations.reDisplayScreen(MainFrame, viewNotesScreen);
    }

    private void createNoteButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void shareVaultButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String username = userEmailIdTextField.getText();
        viewOperations.shareVault(username,globalVaultName);
        viewOperations.reDisplayScreen(MainFrame,existingVaultScreen);
    }

    private void backButtonOnNewCredentialScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void viewCredentialButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String credentialName = (String) viewCredentialComboBox.getSelectedItem();
        Credential credential = viewOperations.viewCredential(globalUserame,globalVaultName,credentialName);
        vaultNameOnCredentialScreen.setText(credential.getCredentialTitle());
        displayUserNameOnCredentialScreen.setText(credential.getCredentialUsername());
        displayPasswordOnCredentialScreen.setText(credential.getCredentialPassword());
        viewOperations.reDisplayScreen(MainFrame, existingCredentialScreen);

    }

    private void backButtonOnNewNoteScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void viewNoteButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String noteTitle = (String) viewNotesComboBox.getSelectedItem();
        Note note = viewOperations.viewNote(globalUserame,globalVaultName,noteTitle);
        displayNoteTitleOnNoteScreen.setText(note.getNoteTitle());
        displayNoteContentOnNoteScreen.setText(note.getNoteContent());
        viewOperations.reDisplayScreen(MainFrame, existingNoteScreen);
    }

    private void backButtonOnViewNotesScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        viewOperations.reDisplayScreen(MainFrame, existingVaultScreen);
    }

    private void shareVaultButtonOnShareVaultScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void backButtonOnExistingNoteScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        viewOperations.reDisplayScreen(MainFrame, viewNotesScreen);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Parent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JPanel MainFrame;
    private javax.swing.JButton backButtonOnExistingCredentialScreen;
    private javax.swing.JButton backButtonOnExistingNoteScreen;
    private javax.swing.JButton backButtonOnExistingVaultPage;
    private javax.swing.JButton backButtonOnListOfVaultsScreen;
    private javax.swing.JButton backButtonOnNewCredentialScreen;
    private javax.swing.JButton backButtonOnNewNoteScreen;
    private javax.swing.JButton backButtonOnShareVaultScreen;
    private javax.swing.JButton backButtonOnViewCredentialScreen;
    private javax.swing.JButton backButtonOnViewNotesScreen;
    private javax.swing.JLabel creadentialTitleLabel;
    private javax.swing.JButton createCredentialButton;
    private javax.swing.JButton createCredentialButtonActual;
    private javax.swing.JButton createNoteButton;
    private javax.swing.JButton createNoteButtonActual;
    private javax.swing.JButton createVaultButton;
    private javax.swing.JLabel credentialPasswordLabel;
    private javax.swing.JTextField credentialPasswordTextField;
    private javax.swing.JTextField credentialTitleTextField;
    private javax.swing.JLabel credentialUsernameLabel;
    private javax.swing.JTextField credentialUsernameTextField;
    private java.awt.TextArea displayNoteContentOnNoteScreen;
    private javax.swing.JLabel displayNoteTitleOnNoteScreen;
    private javax.swing.JLabel displayPasswordOnCredentialScreen;
    private javax.swing.JLabel displayUserNameOnCredentialScreen;
    private javax.swing.JPanel existingCredentialScreen;
    private javax.swing.JPanel existingNoteScreen;
    private javax.swing.JLabel existingVaultLabel;
    private javax.swing.JPanel existingVaultScreen;
    private javax.swing.JButton generateRandomizedPasswordButton;
    private javax.swing.JLabel labelPasswordOnCredentialScreen;
    private javax.swing.JLabel labelUsernameOnCredentialScreen;
    private javax.swing.JPanel listOfVaultScreen;
    private javax.swing.JComboBox<String> listOfVaults;
    private javax.swing.JButton loginButton1;
    private javax.swing.JPanel loginScreen;
    private javax.swing.JPanel newCredentialScreen;
    private javax.swing.JPanel newNoteScreen;
    private javax.swing.JButton newVaultButton;
    private javax.swing.JPanel newVaultScreen;
    private javax.swing.JLabel noteContentLabel;
    private java.awt.TextArea noteContentTextArea;
    private javax.swing.JLabel noteTitleLabel;
    private javax.swing.JTextField noteTitleTextField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton selectVaultButton;
    private javax.swing.JButton shareVaultButton;
    private javax.swing.JButton shareVaultButtonOnShareVaultScreen;
    private javax.swing.JPanel shareVaultScreen;
    private javax.swing.JLabel shareVaultUsernameLabel;
    private javax.swing.JTextField userEmailIdTextField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JLabel vaultNameLabel;
    private javax.swing.JLabel vaultNameOnCredentialScreen;
    private javax.swing.JTextField vaultNameTextField;
    private javax.swing.JButton viewCredentialButton;
    private javax.swing.JComboBox<String> viewCredentialComboBox;
    private javax.swing.JButton viewCredentialsButton;
    private javax.swing.JPanel viewCredentialsScreen;
    private javax.swing.JButton viewNoteButton;
    private javax.swing.JButton viewNotesButton;
    private javax.swing.JComboBox<String> viewNotesComboBox;
    private javax.swing.JPanel viewNotesScreen;
    // End of variables declaration                   
}
