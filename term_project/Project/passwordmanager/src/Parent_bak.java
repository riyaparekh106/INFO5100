import java.sql.SQLException;
import java.util.List;
import java.util.Vector;

/**
 *
 * @author riyaparekh
 */
public class Parent_bak extends javax.swing.JFrame {

    /**
     * Creates new form Parent
     */
    private MyJDBC myJDBC;
    private Vector vaultComboBoxItems;
    private String globalUserame;
    public Parent_bak() {
        try {
            myJDBC = new MyJDBC();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        MainFrame = new javax.swing.JPanel();
        loginScreen = new javax.swing.JPanel();
        passwordLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        registerButton = new javax.swing.JButton();
        loginButton1 = new javax.swing.JButton();
        listOfVaultScreen = new javax.swing.JPanel();
        listOfVaults = new javax.swing.JComboBox<>();
        newVaultButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        selectVaultButton = new javax.swing.JButton();
        existingVaultScreen = new javax.swing.JPanel();
        viewCredentialsButton = new javax.swing.JButton();
        viewNotesButton = new javax.swing.JButton();
        createCredentialButton = new javax.swing.JButton();
        createNoteButton = new javax.swing.JButton();
        backButtonOnExistingVaultPage = new javax.swing.JButton();
        shareVaultButton = new javax.swing.JButton();
        shareVaultScreen = new javax.swing.JPanel();
        backButtonOnShareVaultScreen = new javax.swing.JButton();
        userEmailIdTextField = new javax.swing.JTextField();
        shareVaultUsernameLabel = new javax.swing.JLabel();
        shareVaultButtonOnShareVaultScreen = new javax.swing.JButton();
        existingVaultLabel = new javax.swing.JLabel();
        viewNotesScreen = new javax.swing.JPanel();
        viewNotesComboBox = new javax.swing.JComboBox<>();
        viewNoteButton = new javax.swing.JButton();
        viewCredentialScreen = new javax.swing.JPanel();
        viewCredentialComboBox = new javax.swing.JComboBox<>();
        viewCredentialButton = new javax.swing.JButton();
        existingCreatedCredentialVaultScreen = new javax.swing.JPanel();
        usernameTextFieldOnExistingCredentialVaultScreen = new javax.swing.JTextField();
        passwordTextFieldOnExistingCredentialVaultScreen = new javax.swing.JTextField();
        usernameLabelOnExistingCredentialVaultScreen = new javax.swing.JLabel();
        passwordOnExistingCredentialVaultScreen = new javax.swing.JLabel();
        nameOfTheVaultSelectedLabel = new javax.swing.JLabel();
        newVaultScreen = new javax.swing.JPanel();
        vaultNameTextField = new javax.swing.JTextField();
        vaultNameLabel = new javax.swing.JLabel();
        createVaultButton = new javax.swing.JButton();
        newNotesScreen = new javax.swing.JPanel();
        noteTitleTextField = new javax.swing.JTextField();
        noteTitleLabel = new javax.swing.JLabel();
        noteContentTextArea = new java.awt.TextArea();
        noteContentLabel = new javax.swing.JLabel();
        createNoteButtonActual = new javax.swing.JButton();
        particularNoteScreen = new javax.swing.JPanel();
        titleOfTheSelectedNoteLabel = new javax.swing.JLabel();
        contentOfTheNoteTextArea = new java.awt.TextArea();
        createNewCredentialScreen = new javax.swing.JPanel();
        credentialTitleTextField = new javax.swing.JTextField();
        credentialUsernameTextField = new javax.swing.JTextField();
        credentialPasswordTextField = new javax.swing.JTextField();
        generateRandomizedPasswordButton = new javax.swing.JButton();
        createCredentialButtonActual = new javax.swing.JButton();
        creadentialTitleLabel = new javax.swing.JLabel();
        credentialUsernameLabel = new javax.swing.JLabel();
        credentialPasswordLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        MainFrame.setLayout(new java.awt.CardLayout());

        passwordLabel.setText("Password");

        userNameLabel.setText("Username");

        passwordTextField.setText("");

        registerButton.setText("Register");

        loginButton1.setText("Login");

        javax.swing.GroupLayout loginScreenLayout = new javax.swing.GroupLayout(loginScreen);
        loginScreen.setLayout(loginScreenLayout);
        loginScreenLayout.setHorizontalGroup(
                loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginScreenLayout.createSequentialGroup()
                                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(loginScreenLayout.createSequentialGroup()
                                                .addGap(74, 74, 74)
                                                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(58, 58, 58)
                                                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(usernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                                        .addComponent(passwordTextField)))
                                        .addGroup(loginScreenLayout.createSequentialGroup()
                                                .addGap(190, 190, 190)
                                                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(99, Short.MAX_VALUE))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(loginScreenLayout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(346, Short.MAX_VALUE)))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(loginScreenLayout.createSequentialGroup()
                                        .addGap(188, 188, 188)
                                        .addComponent(loginButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(209, Short.MAX_VALUE)))
        );
        loginScreenLayout.setVerticalGroup(
                loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginScreenLayout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(loginScreenLayout.createSequentialGroup()
                                        .addGap(111, 111, 111)
                                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(284, Short.MAX_VALUE)))
                        .addGroup(loginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginScreenLayout.createSequentialGroup()
                                        .addContainerGap(299, Short.MAX_VALUE)
                                        .addComponent(loginButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(95, 95, 95)))
        );

        MainFrame.add(loginScreen, "card2");
        vaultComboBoxItems = new Vector();
        vaultComboBoxItems.add("VaultName");

        listOfVaults.setModel(new javax.swing.DefaultComboBoxModel<>(vaultComboBoxItems));
        listOfVaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOfVaultsActionPerformed(evt);
            }
        });

        loginButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    loginButton1ActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    registerButtonActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        newVaultButton.setText("Create Vault");
        newVaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newVaultButtonActionPerformed(evt);
            }
        });

        createVaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    createVaultButtonActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        backButton.setText("Back");

        searchButton.setText("Search");

        selectVaultButton.setText("Select");
        selectVaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectVaultButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listOfVaultScreenLayout = new javax.swing.GroupLayout(listOfVaultScreen);
        listOfVaultScreen.setLayout(listOfVaultScreenLayout);
        listOfVaultScreenLayout.setHorizontalGroup(
                listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(listOfVaultScreenLayout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addGroup(listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(listOfVaults, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(newVaultButton, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                .addContainerGap(190, Short.MAX_VALUE))
                        .addGroup(listOfVaultScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(backButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        listOfVaultScreenLayout.setVerticalGroup(
                listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listOfVaultScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(listOfVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                                .addComponent(newVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(listOfVaults, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(182, 182, 182))
        );

        MainFrame.add(listOfVaultScreen, "card3");

        viewCredentialsButton.setText("View Credentials");
        viewCredentialsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCredentialsButtonActionPerformed(evt);
            }
        });

        viewNotesButton.setText("View Notes");

        createCredentialButton.setText("Create Credential");
        createCredentialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCredentialButtonActionPerformed(evt);
            }
        });

        createNoteButton.setText("Create Note");

        backButtonOnExistingVaultPage.setText("Back");
        backButtonOnExistingVaultPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnExistingVaultPageActionPerformed(evt);
            }
        });

        shareVaultButton.setText("Share Vault");

        javax.swing.GroupLayout existingVaultScreenLayout = new javax.swing.GroupLayout(existingVaultScreen);
        existingVaultScreen.setLayout(existingVaultScreenLayout);
        existingVaultScreenLayout.setHorizontalGroup(
                existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingVaultScreenLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(shareVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))
                        .addGroup(existingVaultScreenLayout.createSequentialGroup()
                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(existingVaultScreenLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addComponent(backButtonOnExistingVaultPage, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(existingVaultScreenLayout.createSequentialGroup()
                                                .addGap(90, 90, 90)
                                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(createCredentialButton, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                                        .addComponent(viewCredentialsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(48, 48, 48)
                                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(createNoteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                                        .addComponent(viewNotesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap(76, Short.MAX_VALUE))
        );
        existingVaultScreenLayout.setVerticalGroup(
                existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingVaultScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(backButtonOnExistingVaultPage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(createNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(createCredentialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(existingVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(viewCredentialsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(viewNotesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)
                                .addComponent(shareVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
        );

        MainFrame.add(existingVaultScreen, "card4");

        backButtonOnShareVaultScreen.setText("Back");
        backButtonOnShareVaultScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonOnShareVaultScreenActionPerformed(evt);
            }
        });

        shareVaultUsernameLabel.setText("Username");

        shareVaultButtonOnShareVaultScreen.setText("Share");

        existingVaultLabel.setText("jLabel1");

        javax.swing.GroupLayout shareVaultScreenLayout = new javax.swing.GroupLayout(shareVaultScreen);
        shareVaultScreen.setLayout(shareVaultScreenLayout);
        shareVaultScreenLayout.setHorizontalGroup(
                shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shareVaultScreenLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(shareVaultButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(206, 206, 206))
                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                .addGroup(shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                                .addGap(194, 194, 194)
                                                .addComponent(existingVaultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addGroup(shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                                                .addComponent(shareVaultUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(userEmailIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(backButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(139, Short.MAX_VALUE))
        );
        shareVaultScreenLayout.setVerticalGroup(
                shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(shareVaultScreenLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(backButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(existingVaultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addGroup(shareVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(shareVaultUsernameLabel)
                                        .addComponent(userEmailIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                                .addComponent(shareVaultButtonOnShareVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36))
        );

        MainFrame.add(shareVaultScreen, "card5");

        viewNotesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        viewNoteButton.setText("View Note");

        javax.swing.GroupLayout viewNotesScreenLayout = new javax.swing.GroupLayout(viewNotesScreen);
        viewNotesScreen.setLayout(viewNotesScreenLayout);
        viewNotesScreenLayout.setHorizontalGroup(
                viewNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewNotesScreenLayout.createSequentialGroup()
                                .addContainerGap(194, Short.MAX_VALUE)
                                .addGroup(viewNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewNotesScreenLayout.createSequentialGroup()
                                                .addComponent(viewNotesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(159, 159, 159))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewNotesScreenLayout.createSequentialGroup()
                                                .addComponent(viewNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(222, 222, 222))))
        );
        viewNotesScreenLayout.setVerticalGroup(
                viewNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewNotesScreenLayout.createSequentialGroup()
                                .addGap(192, 192, 192)
                                .addComponent(viewNotesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(viewNoteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(111, Short.MAX_VALUE))
        );

        MainFrame.add(viewNotesScreen, "card6");

        viewCredentialComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        viewCredentialComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCredentialComboBoxActionPerformed(evt);
            }
        });

        viewCredentialButton.setText("View Credential");

        javax.swing.GroupLayout viewCredentialScreenLayout = new javax.swing.GroupLayout(viewCredentialScreen);
        viewCredentialScreen.setLayout(viewCredentialScreenLayout);
        viewCredentialScreenLayout.setHorizontalGroup(
                viewCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewCredentialScreenLayout.createSequentialGroup()
                                .addGroup(viewCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(viewCredentialScreenLayout.createSequentialGroup()
                                                .addGap(175, 175, 175)
                                                .addComponent(viewCredentialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(viewCredentialScreenLayout.createSequentialGroup()
                                                .addGap(219, 219, 219)
                                                .addComponent(viewCredentialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(185, Short.MAX_VALUE))
        );
        viewCredentialScreenLayout.setVerticalGroup(
                viewCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewCredentialScreenLayout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(viewCredentialComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(viewCredentialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(103, Short.MAX_VALUE))
        );

        MainFrame.add(viewCredentialScreen, "card7");

        usernameTextFieldOnExistingCredentialVaultScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldOnExistingCredentialVaultScreenActionPerformed(evt);
            }
        });

        usernameLabelOnExistingCredentialVaultScreen.setText("Username");

        passwordOnExistingCredentialVaultScreen.setText("Password");

        nameOfTheVaultSelectedLabel.setText("Vault Name");

        javax.swing.GroupLayout existingCreatedCredentialVaultScreenLayout = new javax.swing.GroupLayout(existingCreatedCredentialVaultScreen);
        existingCreatedCredentialVaultScreen.setLayout(existingCreatedCredentialVaultScreenLayout);
        existingCreatedCredentialVaultScreenLayout.setHorizontalGroup(
                existingCreatedCredentialVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingCreatedCredentialVaultScreenLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(existingCreatedCredentialVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(usernameLabelOnExistingCredentialVaultScreen)
                                        .addComponent(passwordOnExistingCredentialVaultScreen))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                .addGroup(existingCreatedCredentialVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nameOfTheVaultSelectedLabel)
                                        .addGroup(existingCreatedCredentialVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(passwordTextFieldOnExistingCredentialVaultScreen)
                                                .addComponent(usernameTextFieldOnExistingCredentialVaultScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)))
                                .addGap(140, 140, 140))
        );
        existingCreatedCredentialVaultScreenLayout.setVerticalGroup(
                existingCreatedCredentialVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(existingCreatedCredentialVaultScreenLayout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(nameOfTheVaultSelectedLabel)
                                .addGap(28, 28, 28)
                                .addGroup(existingCreatedCredentialVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(usernameTextFieldOnExistingCredentialVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(usernameLabelOnExistingCredentialVaultScreen))
                                .addGap(39, 39, 39)
                                .addGroup(existingCreatedCredentialVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(passwordTextFieldOnExistingCredentialVaultScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordOnExistingCredentialVaultScreen))
                                .addContainerGap(159, Short.MAX_VALUE))
        );

        MainFrame.add(existingCreatedCredentialVaultScreen, "card8");

        vaultNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaultNameTextFieldActionPerformed(evt);
            }
        });

        vaultNameLabel.setText("Vault Name");

        createVaultButton.setText("Create Vault");

        javax.swing.GroupLayout newVaultScreenLayout = new javax.swing.GroupLayout(newVaultScreen);
        newVaultScreen.setLayout(newVaultScreenLayout);
        newVaultScreenLayout.setHorizontalGroup(
                newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(vaultNameLabel)
                                .addGroup(newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                                .addGap(56, 56, 56)
                                                .addComponent(createVaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(vaultNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(174, Short.MAX_VALUE))
        );
        newVaultScreenLayout.setVerticalGroup(
                newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newVaultScreenLayout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addGroup(newVaultScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(vaultNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(vaultNameLabel))
                                .addGap(68, 68, 68)
                                .addComponent(createVaultButton)
                                .addContainerGap(144, Short.MAX_VALUE))
        );

        MainFrame.add(newVaultScreen, "card9");

        noteTitleLabel.setText("Note Title");

        noteContentLabel.setText("Note Content");

        createNoteButtonActual.setText("Create Note");
        createNoteButtonActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNoteButtonActualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newNotesScreenLayout = new javax.swing.GroupLayout(newNotesScreen);
        newNotesScreen.setLayout(newNotesScreenLayout);
        newNotesScreenLayout.setHorizontalGroup(
                newNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newNotesScreenLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(newNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(noteTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(noteContentLabel))
                                .addGap(73, 73, 73)
                                .addGroup(newNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(noteTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(noteContentTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(116, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newNotesScreenLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(createNoteButtonActual, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(205, 205, 205))
        );
        newNotesScreenLayout.setVerticalGroup(
                newNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(newNotesScreenLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(newNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(noteTitleLabel)
                                        .addComponent(noteTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(newNotesScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(newNotesScreenLayout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(noteContentTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(newNotesScreenLayout.createSequentialGroup()
                                                .addGap(46, 46, 46)
                                                .addComponent(noteContentLabel)))
                                .addGap(21, 21, 21)
                                .addComponent(createNoteButtonActual, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(18, Short.MAX_VALUE))
        );

        MainFrame.add(newNotesScreen, "card10");

        titleOfTheSelectedNoteLabel.setText("Title of the Selected Note");

        javax.swing.GroupLayout particularNoteScreenLayout = new javax.swing.GroupLayout(particularNoteScreen);
        particularNoteScreen.setLayout(particularNoteScreenLayout);
        particularNoteScreenLayout.setHorizontalGroup(
                particularNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(particularNoteScreenLayout.createSequentialGroup()
                                .addContainerGap(187, Short.MAX_VALUE)
                                .addGroup(particularNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, particularNoteScreenLayout.createSequentialGroup()
                                                .addComponent(titleOfTheSelectedNoteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(179, 179, 179))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, particularNoteScreenLayout.createSequentialGroup()
                                                .addComponent(contentOfTheNoteTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(171, 171, 171))))
        );
        particularNoteScreenLayout.setVerticalGroup(
                particularNoteScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(particularNoteScreenLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(titleOfTheSelectedNoteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contentOfTheNoteTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(96, Short.MAX_VALUE))
        );

        MainFrame.add(particularNoteScreen, "card11");

        generateRandomizedPasswordButton.setText("Generate Randomized Password");
        generateRandomizedPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateRandomizedPasswordButtonActionPerformed(evt);
            }
        });

        createCredentialButtonActual.setText("Create Credential");
        createCredentialButtonActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createCredentialButtonActualActionPerformed(evt);
            }
        });

        creadentialTitleLabel.setText("Title");

        credentialUsernameLabel.setText("Username");

        credentialPasswordLabel.setText("Password");

        javax.swing.GroupLayout createNewCredentialScreenLayout = new javax.swing.GroupLayout(createNewCredentialScreen);
        createNewCredentialScreen.setLayout(createNewCredentialScreenLayout);
        createNewCredentialScreenLayout.setHorizontalGroup(
                createNewCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(createNewCredentialScreenLayout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addGroup(createNewCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(credentialPasswordLabel)
                                        .addComponent(credentialUsernameLabel)
                                        .addComponent(creadentialTitleLabel)
                                        .addGroup(createNewCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(credentialTitleTextField)
                                                .addComponent(credentialUsernameTextField)
                                                .addComponent(credentialPasswordTextField)
                                                .addComponent(generateRandomizedPasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                                .addComponent(createCredentialButtonActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap(185, Short.MAX_VALUE))
        );
        createNewCredentialScreenLayout.setVerticalGroup(
                createNewCredentialScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(createNewCredentialScreenLayout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(creadentialTitleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(credentialTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(credentialUsernameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(credentialUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(credentialPasswordLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(credentialPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(generateRandomizedPasswordButton)
                                .addGap(18, 18, 18)
                                .addComponent(createCredentialButtonActual)
                                .addContainerGap(22, Short.MAX_VALUE))
        );

        MainFrame.add(createNewCredentialScreen, "card12");

        getContentPane().add(MainFrame);
        MainFrame.setBounds(0, 0, 575, 436);

        pack();
    }// </editor-fold>

    private List<String> getVaultsForUser() {
        List<String> allVaultsForUser;
        System.out.println("In private method");
        System.out.println(globalUserame);
        allVaultsForUser = myJDBC.viewAllVaultsForUser(globalUserame);
        return allVaultsForUser;
    }
    private void loginButton1ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        String loginPassword = String.valueOf(passwordTextField.getPassword());
        String loginUserName = usernameTextField.getText();
        boolean checkLogin = myJDBC.checkLogin(loginUserName, loginPassword);
        globalUserame = loginUserName;
        List<String> listOfVaultsForUser = getVaultsForUser();
        for(String vault: listOfVaultsForUser) {
            vaultComboBoxItems.add(vault);
        }
        System.out.println(vaultComboBoxItems);

        if (checkLogin) {
            MainFrame.removeAll();
            MainFrame.add(listOfVaultScreen);
            MainFrame.repaint();
            MainFrame.revalidate();
        }
    }
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        String loginPassword = String.valueOf(passwordTextField.getPassword());
        String loginUserName = usernameTextField.getText();
        myJDBC.registerUser(loginUserName,loginPassword);
    }

    private void newVaultButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        MainFrame.removeAll();
        MainFrame.add(newVaultScreen);
        MainFrame.repaint();
        MainFrame.revalidate();
    }

    private void createVaultButtonActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        String vaultName = vaultNameTextField.getText();
        MainFrame.removeAll();
        myJDBC.createVault(globalUserame, vaultName);
        MainFrame.add(existingVaultScreen);
        MainFrame.repaint();
        MainFrame.revalidate();
    }

    private void selectVaultButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        MainFrame.removeAll();
        MainFrame.add(existingVaultScreen);
        MainFrame.repaint();
        MainFrame.revalidate();
    }


    private void backButtonOnExistingVaultPageActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        MainFrame.removeAll();
        MainFrame.add(listOfVaultScreen);
        MainFrame.repaint();
        MainFrame.revalidate();
    }

    private void createCredentialButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        MainFrame.removeAll();
        MainFrame.add(createNewCredentialScreen);
        MainFrame.repaint();
        MainFrame.revalidate();
    }

    private void backButtonOnShareVaultScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        MainFrame.removeAll();
        MainFrame.add(existingVaultScreen);
        MainFrame.repaint();
        MainFrame.revalidate();
    }

    private void viewCredentialComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void usernameTextFieldOnExistingCredentialVaultScreenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String loginPassword = String.valueOf(passwordTextField.getPassword());
        String loginUserName = usernameTextField.getText();

    }

    private void vaultNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void generateRandomizedPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void createCredentialButtonActualActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void viewCredentialsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void listOfVaultsActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void createNoteButtonActualActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parent_bak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parent_bak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parent_bak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parent_bak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Parent_bak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JPanel MainFrame;
    private javax.swing.JButton backButton;
    private javax.swing.JButton backButtonOnExistingVaultPage;
    private javax.swing.JButton backButtonOnShareVaultScreen;
    private java.awt.TextArea contentOfTheNoteTextArea;
    private javax.swing.JLabel creadentialTitleLabel;
    private javax.swing.JButton createCredentialButton;
    private javax.swing.JButton createCredentialButtonActual;
    private javax.swing.JPanel createNewCredentialScreen;
    private javax.swing.JButton createNoteButton;
    private javax.swing.JButton createNoteButtonActual;
    private javax.swing.JButton createVaultButton;
    private javax.swing.JLabel credentialPasswordLabel;
    private javax.swing.JTextField credentialPasswordTextField;
    private javax.swing.JTextField credentialTitleTextField;
    private javax.swing.JLabel credentialUsernameLabel;
    private javax.swing.JTextField credentialUsernameTextField;
    private javax.swing.JPanel existingCreatedCredentialVaultScreen;
    private javax.swing.JLabel existingVaultLabel;
    private javax.swing.JPanel existingVaultScreen;
    private javax.swing.JButton generateRandomizedPasswordButton;
    private javax.swing.JPanel listOfVaultScreen;
    private javax.swing.JComboBox<String> listOfVaults;
    private javax.swing.JButton loginButton1;
    private javax.swing.JPanel loginScreen;
    private javax.swing.JLabel nameOfTheVaultSelectedLabel;
    private javax.swing.JPanel newNotesScreen;
    private javax.swing.JButton newVaultButton;
    private javax.swing.JPanel newVaultScreen;
    private javax.swing.JLabel noteContentLabel;
    private java.awt.TextArea noteContentTextArea;
    private javax.swing.JLabel noteTitleLabel;
    private javax.swing.JTextField noteTitleTextField;
    private javax.swing.JPanel particularNoteScreen;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordOnExistingCredentialVaultScreen;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JTextField passwordTextFieldOnExistingCredentialVaultScreen;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton selectVaultButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton shareVaultButton;
    private javax.swing.JButton shareVaultButtonOnShareVaultScreen;
    private javax.swing.JPanel shareVaultScreen;
    private javax.swing.JLabel shareVaultUsernameLabel;
    private javax.swing.JLabel titleOfTheSelectedNoteLabel;
    private javax.swing.JTextField userEmailIdTextField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JLabel usernameLabelOnExistingCredentialVaultScreen;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JTextField usernameTextFieldOnExistingCredentialVaultScreen;
    private javax.swing.JLabel vaultNameLabel;
    private javax.swing.JTextField vaultNameTextField;
    private javax.swing.JButton viewCredentialButton;
    private javax.swing.JComboBox<String> viewCredentialComboBox;
    private javax.swing.JPanel viewCredentialScreen;
    private javax.swing.JButton viewCredentialsButton;
    private javax.swing.JButton viewNoteButton;
    private javax.swing.JButton viewNotesButton;
    private javax.swing.JComboBox<String> viewNotesComboBox;
    private javax.swing.JPanel viewNotesScreen;
    // End of variables declaration
}
